"""
一、必做题：

1：简单题
    1、函数的形参有哪几种定义形式？
    3、函数的实参有哪几种形式？

2、利用上课讲的for循环嵌套的知识点，封装一个可以打印任意比列三角形的函数
(注意点：和上课的有区别，这个是倒三角)
* * * * * *
* * * * *
* * * *
* * *
* *
*


3、定义一个可以完成任意个数字相加的函数（支持关键字传参和位置传参），并返回相加结果。
要求:调用函数传入1个数字，返回值为这个数字。
        如：func(1) ---->   返回 1
    调用函数传入2个数字，返回值为2个数相加的结果。
        如：func(11,22) ---->   返回33
    调用函数传入3个数字，返回值为3个数相加的结果。
        如：func(11,22,33,) ----> 返回66
    调用函数传入n个数字，返回值为n个数相加的结果。
        如：func(1,2,3,4,5) ----> 返回 15
（提示：可以使用不定长参数来接收参数，对参数进行遍历再相加）
"""

print("----------------------------第1题----------------------------")
print('1、函数的形参有哪几种定义形式？')
print('答：必需参数、默认参数、不定长参数')
print('2、函数的实参有哪几种形式？')
print('答：位置参数、关键字参数')

print("----------------------------第2题----------------------------")


def nabla(n):
    for i in range(n + 1):
        for j in range(n - i):
            print('* ', end='')
        print()


nabla(10)

print("----------------------------第3题----------------------------")


def add(*args, **kwargs):
    if len(args) == 1 and len(kwargs) == 0:
        return args[0]
    elif len(args) == 0 and len(kwargs) == 1:
        for i in kwargs.values():
            return i
    else:
        sum3 = 0
        for i in args:
            sum3 += i
        for j in kwargs.values():
            sum3 += j
        return sum3


print(add(1))
print(add(11, 22))
print(add(a=11, b=22))
print(add(11, 22, a=33, b=44))
